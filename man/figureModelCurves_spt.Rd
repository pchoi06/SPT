% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/figureModelCurves_h0.R
\name{figureModelCurves_h0}
\alias{figureModelCurves_h0}
\title{Plot Observed Data and Fitted Sigmoidal / Double-Sigmoidal Curves}
\usage{
figureModelCurves_h0(
  dataInput,
  sigmoidalFitVector = NULL,
  doubleSigmoidalFitVector = NULL,
  showParameterRelatedLines = FALSE,
  xlabelText = "time",
  ylabelText = "intensity",
  fittedXmin = 0,
  fittedXmax = NA
)
}
\arguments{
\item{dataInput}{A data frame with columns \code{time} and \code{intensity}, or a list
returned by the SPT fitting workflow (containing
\verb{$timeIntensityData} and scaling parameters).}

\item{sigmoidalFitVector}{\emph{(Optional)} A fitted sigmoidal model vector produced by SPT (must have
\code{model == "sigmoidal"}).}

\item{doubleSigmoidalFitVector}{\emph{(Optional)} A fitted double-sigmoidal model vector produced by SPT
(must have \code{model == "doublesigmoidal"}).}

\item{showParameterRelatedLines}{Logical. If \code{TRUE}, overlays horizontal/vertical segments and points
that illustrate estimated parameters (requires that
\code{additionalParameters == TRUE} in the fit vectors).}

\item{xlabelText}{Character. Label for the x-axis (default \code{"time"}).}

\item{ylabelText}{Character. Label for the y-axis (default \code{"intensity"}).}

\item{fittedXmin}{Numeric. Minimum x-value to use when drawing the theoretical curves;
defaults to \code{0}.}

\item{fittedXmax}{Numeric or \code{NA}. Maximum x-value for the theoretical curves; if \code{NA},
uses the full time range from the fit vector.}
}
\value{
A \code{ggplot} object showing the points and fitted curve(s).
}
\description{
Given raw timeâ€“intensity data and one or both fitted model parameter vectors,
plots the data points together with the theoretical sigmoidal and/or
double-sigmoidal curves. Optionally adds dashed lines or markers to
illustrate key model parameters (e.g. midpoints, plateaus).
}
\examples{
\dontrun{
  # simulate and fit, then plot:
  df <- tibble(time = seq(0, 300, 50),
               intensity = sigmoidalFitFormula_h0(seq(0,300,50),
                     maximum=480, slopeParam=0.04, midPoint=160, h0=0)
                        + rnorm(7,0,50))
  fit <- SPT(dataInput = df)
  figureModelCurves_h0(df, sigmoidalFitVector = fit$sigmoidalModel,
                        showParameterRelatedLines = TRUE)
}

}
